;;; -*- Mode: tdl; Coding: utf-8; -*-

;; lexical filtering: reduce the chart after lexical instantiation and the
;; application of lexical rules, right before we turn loose syntactic rules.
:begin :instance :status lexical-filtering-rule.
:include "lfr.tdl".
:end :instance.

:begin :type.

;;
;; type hierarchy
;;

:include "matrix".
:include "nor".
:include "preds-small".
:include "preds-mid".
:include "ground".
:include "infl-codes".
:include "tmt.tdl".
:include "unknown".

:end :type.

;;
;; lexicon entries (instances of status lex-entry or generic-lex-entry)
;;

:begin :instance :status lex-entry.
:include "nkl-mid.tdl".
:include "lexicon.tdl".
:include "funclex.tdl".
:end :instance.

:begin :instance :status token-mapping-rule.
   :include "tmr/prelude".
   :include "tmr/pos".
   :include "tmr/pos-ipa".
   :include "tmr/finis".
:end :instance.

:begin :instance :status generic-lex-entry.
   :include "gle.tdl".
:end :instance.

;;
;; grammar rules and lexical rules (instances of status rule)
;;

:begin :instance :status rule.
:include "rules".
:end :instance.

:begin :instance :status lex-rule.
:include "irules".
:end :instance.

;;
;; parse-tree labels (instances)
;;

:begin :instance.
:include "labels".
:end :instance.

;;
;; start symbols of the grammar (instances)
;;

:begin :instance.
:include "roots".
:end :instance.
